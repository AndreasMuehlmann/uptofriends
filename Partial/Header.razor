<header class="p-2 dark:bg-gray-800 dark:text-gray-100">
	<div class="container flex justify-between h-16 mx-auto">
		<div class="flex">
			<a href="/" class="flex items-center p-2">
				<img class="h-10 rounded-full" src="images/UpToFriendsIcon.png">
			</a>
			<ul class="items-stretch hidden space-x-3 lg:flex">
				<li class="flex">
					<a href="/" class="flex items-center px-4 -mb-1 border-b-2 dark:border-transparent">Link</a>
				</li>
				<li class="flex">
					<a href="/" class="flex items-center px-4 -mb-1 border-b-2 dark:border-transparent dark:text-violet-400 dark:border-violet-400">Link</a>
				</li>
				<li class="flex">
					<a href="/" class="flex items-center px-4 -mb-1 border-b-2 dark:border-transparent">Link</a>
				</li>
				<li class="flex">
					<a href="/" class="flex items-center px-4 -mb-1 border-b-2 dark:border-transparent">Link</a>
				</li>
			</ul>
		</div>
		<div class="items-center flex-shrink-0 hidden lg:flex">
			<button class="px-8 py-3 font-semibold rounded dark:bg-violet-400 dark:text-gray-900" @onclick="toggleDarkMode">DarkMode</button>
		</div>
	</div>
	<link rel="icon" href="favicon.ico">
</header>

@code {
	[Parameter]
	public EventCallback<string> OnToggleDarkMode { get; set; }

	private bool isDark = true;

	private async Task toggleDarkMode()
	{
		if (isDark)
		{
			isDark = false;
			await OnToggleDarkMode.InvokeAsync("");
		} else {
			isDark = true;
			await OnToggleDarkMode.InvokeAsync("dark");
		}
	}
}